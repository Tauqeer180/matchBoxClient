{"version":3,"sources":["views/auth-views/components/LoginForm.js","views/auth-views/authentication/login_wh/index.js"],"names":["LoginForm","props","history","useHistory","showForgetPassword","otherSignIn","hideAuthMessage","onForgetPasswordClick","showLoading","signInWithGoogle","signInWithFacebook","extra","signIn","token","loading","redirect","showMessage","message","allowRedirect","useEffect","push","setTimeout","div","initial","opacity","marginBottom","animate","type","showIcon","layout","name","initialValues","email","password","onFinish","values","Item","label","style","fontSize","margin","rules","required","prefix","MailOutlined","className","padding","size","background","borderColor","borderWidth","htmlType","block","onClick","Password","LockOutlined","defaultProps","mapDispatchToProps","showAuthMessage","connect","auth","backgroundStyle","Typography","Title","Paragraph","Text","Link","backgroundColor","backgroundRepeat","backgroundSize","Login_WH","useSelector","state","theme","currentTheme","justify","xs","sm","md","lg","borderRadius","class","align","span","width","src","alt","pull","href","color"],"mappings":"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","file":"static/js/23.f8be64b6.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Input, Divider, Alert } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { GoogleSVG, FacebookSVG } from \"assets/svg/icon\";\nimport CustomIcon from \"components/util-components/CustomIcon\";\nimport {\n  signIn,\n  showLoading,\n  showAuthMessage,\n  hideAuthMessage,\n  signInWithGoogle,\n  signInWithFacebook,\n} from \"redux/actions/Auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nexport const LoginForm = (props) => {\n  let history = useHistory();\n\n  const {\n    otherSignIn,\n    showForgetPassword,\n    hideAuthMessage,\n    onForgetPasswordClick,\n    showLoading,\n    signInWithGoogle,\n    signInWithFacebook,\n    extra,\n    signIn,\n    token,\n    loading,\n    redirect,\n    showMessage,\n    message,\n    allowRedirect,\n  } = props;\n\n  const initialCredential = {\n    email: \"user1@themenate.net\",\n    password: \"2005ipo\",\n  };\n\n  const onLogin = (values) => {\n    showLoading();\n    signIn(values);\n    history.push(\"/app/dashboards/default\");\n  };\n\n  const onGoogleLogin = () => {\n    showLoading();\n    signInWithGoogle();\n  };\n\n  const onFacebookLogin = () => {\n    showLoading();\n    signInWithFacebook();\n  };\n\n  useEffect(() => {\n    if (token !== null && allowRedirect) {\n      history.push(redirect);\n    }\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  });\n\n  const renderOtherSignIn = (\n    <div>\n      <Divider>\n        <span className=\"text-muted font-size-base font-weight-normal\">\n          or connect with\n        </span>\n      </Divider>\n      <div className=\"d-flex justify-content-center\">\n        <Button\n          onClick={() => onGoogleLogin()}\n          className=\"mr-2\"\n          disabled={loading}\n          icon={<CustomIcon svg={GoogleSVG} />}\n        >\n          Google\n        </Button>\n        <Button\n          onClick={() => onFacebookLogin()}\n          icon={<CustomIcon svg={FacebookSVG} />}\n          disabled={loading}\n        >\n          Facebook\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <motion.div\n        initial={{ opacity: 0, marginBottom: 0 }}\n        animate={{\n          opacity: showMessage ? 1 : 0,\n          marginBottom: showMessage ? 20 : 0,\n        }}\n      >\n        <Alert type=\"error\" showIcon message={message}></Alert>\n      </motion.div>\n      <Form\n        layout=\"vertical\"\n        name=\"login-form\"\n        initialValues={initialCredential}\n        onFinish={onLogin}\n      >\n        <Form.Item\n          name=\"email\"\n          label={<p style={{ fontSize: 15, margin: 0 }}>Email</p>}\n          rules={[\n            {\n              required: true,\n              message: \"Please input your email\",\n            },\n            {\n              type: \"email\",\n              message: \"Please enter a validate email!\",\n            },\n          ]}\n        >\n          <Input\n            prefix={<MailOutlined className=\"text-primary\" />}\n            style={{ padding: 15 }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            style={{\n              background: \"#1C3345\",\n              borderColor: \"#000000\",\n              borderWidth: 3,\n            }}\n            htmlType=\"submit\"\n            block\n            loading={loading}\n          >\n            Resent OTP\n          </Button>\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={\n            <div\n              className={`${\n                showForgetPassword\n                  ? \"d-flex justify-content-between w-100 align-items-center\"\n                  : \"\"\n              }`}\n            >\n              <span style={{ fontSize: 15, margin: 0 }}>Password</span>\n              {showForgetPassword && (\n                <span\n                  onClick={() => onForgetPasswordClick}\n                  className=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\n                >\n                  Forget Password?\n                </span>\n              )}\n            </div>\n          }\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password\",\n            },\n          ]}\n        >\n          <Input.Password\n            prefix={<LockOutlined className=\"text-primary\" />}\n            style={{ padding: 15 }}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            style={{\n              background: \"#D3D3D3\",\n              borderColor: \"#000000\",\n              borderWidth: 3,\n            }}\n            htmlType=\"submit\"\n            block\n            loading={loading}\n          >\n            Sign In\n          </Button>\n        </Form.Item>\n        {/* {otherSignIn ? renderOtherSignIn : null} */}\n        {extra}\n      </Form>\n    </>\n  );\n};\n\nLoginForm.propTypes = {\n  otherSignIn: PropTypes.bool,\n  showForgetPassword: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nLoginForm.defaultProps = {\n  otherSignIn: true,\n  showForgetPassword: false,\n};\n\nconst mapStateToProps = ({ auth }) => {\n  const { loading, message, showMessage, token, redirect } = auth;\n  return { loading, message, showMessage, token, redirect };\n};\n\nconst mapDispatchToProps = {\n  signIn,\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage,\n  signInWithGoogle,\n  signInWithFacebook,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import React from \"react\";\nimport LoginForm from \"../../components/LoginForm\";\nimport { Card, Row, Col, Typography } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nconst backgroundStyle = {\n  //   backgroundImage: \"url(/img/others/bgLogin.jpg)\",\n  backgroundColor: \"#e5e5e5\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\n\nconst Login_WH = (props) => {\n  const theme = useSelector((state) => state.theme.currentTheme);\n  return (\n    <div className=\"h-100\" style={backgroundStyle}>\n      <div className=\"container d-flex flex-column justify-content-center h-100\">\n        <Row justify=\"center\">\n          <Col xs={20} sm={20} md={20} lg={10}>\n            <Card style={{ borderRadius: 20 }}>\n              <div className=\"my-4\">\n                <div class=\"text-center\">\n                  <Row type=\"flex\" justify=\"center\" align=\"center\">\n                    <Col span={18} push={3}>\n                      <img\n                        style={{ width: \"60px\" }}\n                        className=\"img-fluid\"\n                        src={`/img/logoMatchbox.jpeg`}\n                        alt=\"\"\n                      />\n                    </Col>\n                    <Col span={6} pull={18}>\n                      <img\n                        style={{ width: \"30px\" }}\n                        className=\"img-fluid\"\n                        src={`/img/Iconly-Light-outline-Arrow-Left3.png`}\n                        alt=\"\"\n                      />\n                    </Col>\n                  </Row>\n                </div>\n\n                <Row justify=\"center\">\n                  <Col xs={24} sm={24} md={20} lg={20}>\n                    <Row type=\"flex\" justify=\"flex-start\" align=\"flex-start\">\n                      <Col>\n                        <h2>Welcome back</h2>\n                        <h4>Enter your email</h4>\n                      </Col>\n                    </Row>\n                    <LoginForm {...props} />\n                  </Col>\n                </Row>\n              </div>\n              <div class=\"text-center\">\n                <h5>\n                  Dont have an Account?{\" \"}\n                  <a href=\"/auth/register-1\">\n                    <span style={{ color: \"#8ba085\" }}>Register</span>\n                  </a>\n                </h5>\n              </div>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Login_WH;\n"],"sourceRoot":""}